#
# This is part of Application Builder.
# https://github.com/golift/application-builder
#

FROM golang:1-alpine as builder

# Build speed magic! 
# https://www.docker.com/blog/faster-multi-platform-builds-dockerfile-cross-compilation-guide/
WORKDIR /src
COPY main.go go.mod go.sum ./

# Cache all the needed tools.
RUN go mod download \
    && go run github.com/kevinburke/go-bindata/v4/go-bindata@latest -v \
    && go run github.com/swaggo/swag/cmd/swag@master -v

COPY pkg pkg
RUN go generate ./...

ARG TARGETARCH

RUN curl -sSo /notifiarr.tgz \
    https://raw.githubusercontent.com/Notifiarr/build-dependencies/main/notifiarr-docker-$TARGETARCH.tgz \
    && tar -zxf /notifiarr.tgz -C /

ARG TARGETOS
ARG BUILD_DATE
ARG BRANCH
ARG VERSION
ARG ITERATION
ARG COMMIT

# Build the app.
RUN GOFLAGS="-trimpath -mod=readonly -modcacherw" \
    GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -o /tmp/image -tags osusergo,netgo \
    -ldflags "-w -s -X \"golift.io/version.Branch=${BRANCH} (${COMMIT})\" \
    -X \"golift.io/version.BuildDate=${BUILD_DATE}\" \
    -X \"golift.io/version.BuildUser=docker\" \
    -X \"golift.io/version.Revision=${ITERATION}\" \
    -X \"golift.io/version.Version=${VERSION}\""

FROM alpine

COPY --from=builder /tmp/image /notifiarr
RUN ln -s /notifiarr /image

# For megacli.
COPY --from=builder /MegaCli* /libstorelibir-2.so.14.07-0 /smartctl /
# Other tools.
RUN apk add ipmitool 

ENV TZ=UTC

# Notifiarr specific.
ENV PATH=/
ENV USER=root

EXPOSE 5454
ENTRYPOINT [ "/notifiarr" ]

ARG TARGETOS
ARG TARGETARCH
ARG BUILD_DATE
ARG COMMIT
ARG VERSION
ARG ITERATION
ARG LICENSE=MIT
ARG SOURCE_URL=http://github.com/golift/application-builder
ARG DESC=application-builder
ARG VENDOR=golift
ARG AUTHOR=golift

# Build-time metadata as defined at https://github.com/opencontainers/image-spec/blob/master/annotations.md
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
    org.opencontainers.image.title="Notifiarr on Alpine" \
    org.opencontainers.image.documentation="https://notifiarr.wiki" \
    org.opencontainers.image.description="${DESC}" \
    org.opencontainers.image.url="${SOURCE_URL}" \
    org.opencontainers.image.revision="${COMMIT}" \
    org.opencontainers.image.source="${SOURCE_URL}" \
    org.opencontainers.image.vendor="${VENDOR}" \
    org.opencontainers.image.authors="${AUTHOR}" \
    org.opencontainers.image.architecture="${TARGETOS} ${TARGETARCH}" \
    org.opencontainers.image.licenses="${LICENSE}" \
    org.opencontainers.image.version="${VERSION}-${ITERATION}"