#!/bin/bash -x

# Deploys a new aur PKGBUILD file to a github repo: $AUREPO
# Requires SSH credentials in ssh-agent to work.
# Run by Travis-CI when a new release is created on GitHub.
# Do not edit this file.

source settings.sh

mkdir aur

SHA256=${curl -sL https://github.com/Notifiarr/notifiarr/archive/v$(VERSION).tar.gz | openssl dgst -r -sha256}

sed -e "s/{{VERSION}}/${VERSION}/g" \
    -e "s/{{Iter}}/${ITERATION}/g" \
    -e "s/{{SHA256}}/${SHA256}/g" \
    -e "s/{{Desc}}/${DESC}/g" \
    -e "s%{{BINARY}}%notifiarr%g" \
    -e "s%{{SOURCE_URL}}%${SOURCE_URL}%g" \
    -e "s%{{SOURCE_PATH}}%${SOURCE_PATH}%g" \
    -e "s%{{CONFIG_FILE}}%${CONFIG_FILE}%g" \
    init/archlinux/PKGBUILD.template > aur/PKGBUILD

sed -e "s/{{VERSION}}/${VERSION}/g" \
    -e "s/{{Iter}}/${ITERATION}/g" \
    -e "s/{{SHA256}}/${SHA256}/g" \
    -e "s/{{Desc}}/${DESC}/g" \
    -e "s%{{BINARY}}%notifiarr%g" \
    -e "s%{{SOURCE_URL}}%${SOURCE_URL}%g" \
    -e "s%{{SOURCE_PATH}}%${SOURCE_PATH}%g" \
    -e "s%{{CONFIG_FILE}}%${CONFIG_FILE}%g" \
    init/archlinux/SRCINFO.template > aur/.SRCINFO

cat > aur/notifiarr.aur.install << EOF
post_upgrade() {
  /bin/systemctl restart notifiarr
}
pre_remove() {
  /bin/systemctl stop notifiarr
  /bin/systemctl disable notifiarr
}
EOF

AU_FILE="$(mktemp -u $HOME/.ssh/XXXXX)"
echo "${AUR_DEPLOY_KEY}" > "${AU_FILE}"
chmod 600 "${AU_FILE}"
printf "%s\n" \
  "Host github.com-aurepo" \
  "  HostName github.com" \
  "  IdentityFile ${AU_FILE}" \
  "  StrictHostKeyChecking no" \
  "  LogLevel ERROR" >> $HOME/.ssh/config

git config --global user.email "notifiarr@auto.releaser"
git config --global user.name "notifiarr-auto-releaser"

rm -rf aur_release_repo
git clone git@github.com-aurepo:golift/aur.git aur_release_repo

mkdir -p "aur_release_repo/notifiarr"
mv aur/{*,.??*} "aur_release_repo/notifiarr/"
pushd aur_release_repo
git add notifiarr
git commit -m "Update notifiarr on Release: v${VERSION}-${ITERATION}"
git push
popd

rm -rf aur aur_release_repo