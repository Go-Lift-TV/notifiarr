// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplateapi = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://notifiarr.com",
        "contact": {
            "name": "Notifiarr Discord",
            "url": "https://notifiarr.com/discord"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/Notifiarr/notifiarr/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns information about the client's configuration. This endpoint returns all the instance IDs (and instance names if present). Use the returned instance IDs with endpoints that accept an instance ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Retrieve client info.",
                "responses": {
                    "200": {
                        "description": "contains all info except appStatus",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/clientinfo.AppInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new Album to Lidarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Add Lidarr Album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lidarr.AddAlbumInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/lidarr.Album"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "item alrady exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "no item ID provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error during add",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "instance error during check",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/artist/{artistID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches an Artist from Lidarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Get Lidarr Artist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "artist ID",
                        "name": "artistID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/lidarr.Artist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/check/{mbid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Checks if an album already exists in Lidarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Check for Lidarr Album existence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "movie brains ID",
                        "name": "mbid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "already exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/command/search/{albumID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the search status of an album ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Search Lidarr Album ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "album ID",
                        "name": "albumID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/get/{albumID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches an Album from Lidarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Get Lidarr Album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "album ID",
                        "name": "albumID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/lidarr.Album"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/metadataProfiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Metadata Profiles from Lidarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Get Lidarr Metadata Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of ID to name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/qualityDefinitions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Definitions from Lidarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Get Lidarr Quality Definitions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of ID to name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/qualityProfile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Profiles Data from Lidarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Get Lidarr Quality Profile Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all profiles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/lidarr.QualityProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Lidarr Quality Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Add Lidarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lidarr.QualityProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/qualityProfile/{profileID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Lidarr Quality Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Update Lidarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "profile ID to update",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated item content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lidarr.QualityProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "no profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/qualityProfiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Profiles from Lidarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Get Lidarr Quality Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of ID to name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/rootFolder": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Lidarr Root Folders paths and free space.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Retrieve Lidarr Root Folders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of path-\u003espace free",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/search/{query}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Searches all Album Titles for the search term provided.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Search for Lidarr Albums",
                "parameters": [
                    {
                        "type": "string",
                        "description": "title search string",
                        "name": "query",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "minimal album data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/apps.lidarrSearchAlbum.albumData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/tag": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Lidarr Tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Retrieve Lidarr Tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tags",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/starr.Tag"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/tag/{label}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new tag with the provided label.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Create Lidarr Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new tag's label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/tag/{tagID}/{label}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the label for a an existing tag.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Update Lidarr Tag Label",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "tag ID to update",
                        "name": "tagID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an Album in Lidarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Update Lidarr Album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "album content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lidarr.Album"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/lidarr/{instance}/updateartist": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an Artist in Lidarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lidarr"
                ],
                "summary": "Update Lidarr Artist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "album content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lidarr.Artist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/plex/1/directory": {
            "get": {
                "description": "Returns the Plex Library Directory.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plex"
                ],
                "summary": "Retrieve the Plex Library Directory.",
                "responses": {
                    "200": {
                        "description": "Plex Library Directory",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/plex.SectionDirectory"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Plex error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/plex/1/emptytrash/{libraryKey}": {
            "get": {
                "description": "Empties the Plex library trash for the provided library key. Get the library key from the Directory.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plex"
                ],
                "summary": "Empty Plex Trash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plex Library Section Key",
                        "name": "libraryKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Plex error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/plex/1/kill": {
            "get": {
                "description": "Kills a Plex session by ID and sends a message to the user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plex"
                ],
                "summary": "Kill a Plex session.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plex session ID",
                        "name": "sessionId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reason the session is being terminated. Sent to the user.",
                        "name": "reason",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Plex error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/plex/1/markwatched/{itemKey}": {
            "get": {
                "description": "Marks a movie or show or audio track as watched.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plex"
                ],
                "summary": "Mark a Plex item as watched.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plex Item Key",
                        "name": "itemKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Plex error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/plex/1/sessions": {
            "get": {
                "description": "Returns Plex sessions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plex"
                ],
                "summary": "Retrieve Plex sessions.",
                "responses": {
                    "200": {
                        "description": "contains app info included appStatus",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/plex.Sessions"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Plex error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new Movie to Radarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Add Radarr Movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.AddMovieInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/radarr.Movie"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "item alrady exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "no item ID provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error during add",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "instance error during check",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/check/{tmdbid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Checks if a Radarr movie already exists.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Check Radarr Movie Existence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "TMDB ID",
                        "name": "tmdbid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "movie does not exist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "item alrady exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/command/search/{movieID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Trigger an Internet search for a Radarr Movie.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Search for Radarr Movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "movieID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "search status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/customformats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Custom Formats Data from Radarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Get Radarr Custom Formats Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "custom formats",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/radarr.CustomFormat"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Custom Format in Radarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Create Radarr Custom Format",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Custom Format content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.CustomFormat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "custom format",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/radarr.CustomFormat"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/customformats/all": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete all Custom Formats from Radarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Delete all Radarr Custom Formats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "item delete counters",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/apps.deleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/customformats/{formatID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Custom Format in Radarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Update Radarr Custom Format",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Custom Format ID",
                        "name": "formatID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Custom Format content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.CustomFormat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "custom format",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/radarr.CustomFormat"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a Custom Format from Radarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Delete Radarr Custom Format",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Custom Format ID",
                        "name": "formatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/exclusions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all Radarr Exclusions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Get Radarr Exclusions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "exclusion list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/radarr.Exclusion"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new exclusion in Radarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Create Radarr Exclusion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "album content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/radarr.Exclusion"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/exclusions/{exclusionIDs}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Exclusion(s) from Radarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Remove Radarr Exclusion(s)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "exclusion IDs to delete, comma separated",
                        "name": "exclusionIDs",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/get": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Radarr Movies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Get all Radarr Movies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "movies content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/radarr.Movie"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/get/{movieID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a Radarr Movie by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Get Radarr Movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "movieID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "movie content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/radarr.Movie"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/importlist": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Import Lists from Radarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Get Radarr Import Lists",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "import list list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/radarr.ImportList"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Import List in Radarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Create Radarr Import List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Import List",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.ImportList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "import list returns",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/radarr.ImportList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/importlist/{listID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an Import List in Radarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Update Radarr Import List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Import List ID",
                        "name": "listID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Import Listcontent",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.ImportList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "import list returns",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/radarr.ImportList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/naming": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns Radarr movie naming conventions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Retrieve Radarr Movie Naming",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "naming conventions",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/radarr.Naming"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the Radarr movie naming conventions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Update Radarr Movie Naming",
                "parameters": [
                    {
                        "description": "naming conventions",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.Naming"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "naming ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/qualityProfile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Profiles Data from Radarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Get Radarr Quality Profile Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "all profiles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/radarr.QualityProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Radarr Quality Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Add Radarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.QualityProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/qualityProfile/{profileID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Radarr Quality Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Update Radarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "profile ID to update",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated item content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.QualityProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "no profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes a Radarr Quality Profile.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Remove Radarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "profile ID to update",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "no profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/qualityProfiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Profiles from Radarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Get Radarr Quality Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "map of ID to name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/qualityProfiles/all": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes all Radarr Quality Profiles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Remove Radarr Quality Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/apps.deleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error getting profiles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/qualitydefinition": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Quality Definitions from Radarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Get Radarr Quality Definitions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "quality definitions list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/radarr.QualityDefinition"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates all Quality Definitions in Radarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Update Radarr Quality Definitions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Import Listcontent",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/radarr.QualityDefinition"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "quality definitions return",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/radarr.QualityDefinition"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/rootFolder": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Radarr Root Folders paths and free space.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Retrieve Radarr Root Folders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of path-\u003espace free",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/search/{query}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Searches all Radarr Movie Titles for the search term provided. Returns a minimal amount of data for each found item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Search for Radarr Movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "title search string",
                        "name": "query",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "minimal movie data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/apps.radarrSearchMovie.movieData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/tag": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Radarr Tags.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Retrieve Radarr Tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tags",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/starr.Tag"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/tag/{label}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Radarr tag with the provided label.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Create Radarr Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new tag's label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/tag/{tagID}/{label}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the label for a an existing Radarr tag.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Update Radarr Tag Label",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "tag ID to update",
                        "name": "tagID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/radarr/{instance}/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Movie in Radarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Radarr"
                ],
                "summary": "Update Radarr Movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "album content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/radarr.Movie"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new Book to Readarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Add Readarr Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/readarr.AddBookInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/readarr.Book"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "item alrady exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "no valid editions provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error during add",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "instance error during check",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/author/{authorID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches an Author from Readarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Get Readarr Author",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "author ID",
                        "name": "authorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "author content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/readarr.Author"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/check/{gridID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Checks if a book already exists in Readarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Check Readarr Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Good Reads ID",
                        "name": "gridID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "already exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/get/{bookID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a book from Readarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Get Readarr Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "bookID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/metadataProfiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Metadata Profiles from Readarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Get Readarr Metadata Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of ID to name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/qualityProfile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Profiles Data from Readarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Get Readarr Quality Profile Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all profiles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/readarr.QualityProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Readarr Quality Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Add Readarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/readarr.QualityProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/qualityProfile/{profileID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Readarr Quality Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Update Readarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "profile ID to update",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated item content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/readarr.QualityProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "no profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/qualityProfiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Profiles from Readarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Get Readarr Quality Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of ID to name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/rootFolder": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Readarr Root Folders paths and free space.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Retrieve Readarr Root Folders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of path-\u003espace free",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/search/{query}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Searches all Book Titles for the search term provided.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Search for Readarr Books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "title search string",
                        "name": "query",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "minimal book data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/apps.readarrSearchBook.bookData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/tag": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Readarr Tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Retrieve Readarr Tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tags",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/starr.Tag"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/tag/{label}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new tag with the provided label.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Create Readarr Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new tag's label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/tag/{tagID}/{label}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the label for a an existing tag.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Update Readarr Tag Label",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "tag ID to update",
                        "name": "tagID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Book in Readarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Update Readarr Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "book content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/readarr.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/readarr/{instance}/updateauthor": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an Author in Readarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readarr"
                ],
                "summary": "Update Readarr Author",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "author content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/readarr.Author"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new Series to Sonarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Add Sonarr Series",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.AddSeriesInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "series content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/sonarr.Series"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "item alrady exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "no item ID provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error during add",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "instance error during check",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/check/{tvdbid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Checks if a Sonarr Series alrady exists.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Check Sonarr Series Existence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "TVDB ID",
                        "name": "tvdbid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "series does not exist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "item alrady exists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/command": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Execute any command in Sonarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Execute Sonarr Command",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "command content, must include series ID",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.CommandRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "command response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/sonarr.CommandResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/command/search/{seriesID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Trigger an Internet search for a Sonarr Series.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Search for Sonarr Series",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Series ID",
                        "name": "seriesID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "search status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/command/{commandID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Check the status of an executed Sonarr Command.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Sonar Command Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Command ID returned by executing a command",
                        "name": "commandID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "command status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/sonarr.CommandResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/customformats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Custom Format from Sonarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Get Sonarr Custom Formats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "custom formats",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/sonarr.CustomFormat"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Custom Format in Sonarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Create Sonarr Custom Format",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Custom Format content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.CustomFormat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "custom format",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/sonarr.CustomFormat"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/customformats/all": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete all Custom Formats from Sonarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Delete all Sonarr Custom Formats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "item delete counters",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/apps.deleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/customformats/{formatID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Custom Format in Sonarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Update Sonarr Custom Format",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Custom Format ID",
                        "name": "formatID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Custom Format content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.CustomFormat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "custom format",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/sonarr.CustomFormat"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a Custom Format from Sonarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Delete Sonarr Custom Format",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Custom Format ID",
                        "name": "formatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/get/{seriesID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a Sonarr Series by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Get Sonarr Series",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Series ID",
                        "name": "seriesID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "series content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/sonarr.Series"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/getEpisodes/{seriesID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a Sonarr Series Episodes by Series ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Get Sonarr Series Episodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Series ID",
                        "name": "seriesID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "episodes content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/sonarr.Episode"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/languageProfiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Language Profiles from Sonarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Get Sonarr Language Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "map of ID to name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/naming": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns Sonarr series naming conventions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Retrieve Sonarr Series Naming",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "naming conventions",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/sonarr.Naming"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the Sonarr series naming conventions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Update Sonarr Series Naming",
                "parameters": [
                    {
                        "description": "naming conventions",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.Naming"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "naming ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad json input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/qualityProfile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Profiles Data from Sonarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Get Sonarr Quality Profile Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "all profiles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/sonarr.QualityProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Sonarr Quality Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Add Sonarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.QualityProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/qualityProfile/{profileID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Sonarr Quality Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Update Sonarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "profile ID to update",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated item content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.QualityProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "no profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes a Sonarr Quality Profile.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Remove Sonarr Quality Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "profile ID to update",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "no profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/qualityProfiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Quality Profiles from Sonarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Get Sonarr Quality Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "map of ID to name",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/qualityProfiles/all": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes all Sonarr Quality Profiles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Remove Sonarr Quality Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/apps.deleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error getting profiles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/qualitydefinition": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Quality Definitions from Sonarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Get Sonarr Quality Definitions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "quality definitions list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/sonarr.QualityDefinition"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates all Quality Definitions in Sonarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Update Sonarr Quality Definitions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Import Listcontent",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sonarr.QualityDefinition"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "quality definitions return",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/sonarr.QualityDefinition"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/releaseProfile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all Release Profile Data from Sonarr.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Get Sonarr Release Profile Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "all profiles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/sonarr.ReleaseProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Sonarr Release Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Add Sonarr Release Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new item content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.ReleaseProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/releaseProfile/all": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes all Sonarr Release Profiles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Remove Sonarr Release Profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/apps.deleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error getting profiles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/releaseProfile/{profileID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Sonarr Release Profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Update Sonarr Release Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "profile ID to update",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated item content",
                        "name": "PUT",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.ReleaseProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "json input error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "no profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes a Sonarr Release Profile.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Remove Sonarr Release Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "profile ID to update",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "no profile ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/rootFolder": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Sonarr Root Folders paths and free space.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Retrieve Sonarr Root Folders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of path-\u003espace free",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/search/{query}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Searches all Sonarr Series Titles for the search term provided. Returns a minimal amount of data for each found item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Search for Sonarr Series",
                "parameters": [
                    {
                        "type": "string",
                        "description": "title search string",
                        "name": "query",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "minimal series data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/apps.sonarrSearchSeries.seriesData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/seasonPass": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Season Pass allows you to mass-edit items in Sonarr.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Publish Sonarr Season Pass",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Season pass content",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sonarr.SeasonPass"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "invalid json provided",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/tag": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all Sonarr Tags.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Retrieve Sonarr Tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tags",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/starr.Tag"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/tag/{label}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Sonarr tag with the provided label.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Create Sonarr Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new tag's label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/tag/{tagID}/{label}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the label for a an existing Sonarr tag.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Update Sonarr Tag Label",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "tag ID to update",
                        "name": "tagID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tag ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/sonarr/{instance}/unmonitor/{episodeID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Unmonnitors and returns a Sonarr Series Episode.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sonarr"
                ],
                "summary": "Unmonnitors Sonarr Series Episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "episodeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "episode content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/sonarr.Episode"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "instance error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/trash/radarr": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns custom format and related data for multiple Radarr instances at once. May be slow.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TRaSH",
                    "Radarr"
                ],
                "summary": "Retrieve custom format data from multiple Radarr instances.",
                "parameters": [
                    {
                        "description": "list of instances",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cfsync.TrashAggInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contains app info included appStatus",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/cfsync.RadarrTrashPayload"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad input payload or missing app",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trash/sonarr": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns custom format and related data for multiple Sonarr instances at once. May be slow.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TRaSH",
                    "Sonarr"
                ],
                "summary": "Retrieve custom format data from multiple Sonarr instances.",
                "parameters": [
                    {
                        "description": "list of instances",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cfsync.TrashAggInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contains app info included appStatus",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/cfsync.SonarrTrashPayload"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad input payload or missing app",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/backup/{app}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Start backup file check on all applications of a specific type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Start app-specific backup check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app type to check",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "missing app",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/cfsync/{instance}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sync TRaSH Radarr data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers",
                    "TRaSH"
                ],
                "summary": "Sync TRaSH Radarr data",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Triggers sync on this instance if provided, otherwise all instances",
                        "name": "instance",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/clientlogs/{enabled}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Toggle client error log sharing.\nThis allows enabling and disabling of client error logs being shared with the website.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Toggle client error log sharing",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Enable or disable client error log sharing.",
                        "name": "enabled",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/command/{hash}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Execute a pre-programmed command.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Execute Command",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Unique hash for command being executed",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad or missing hash",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Execute a pre-programmed command with arguments.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Execute Command w/ args",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Unique hash for command being executed",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "example": "args=/tmp\u0026args=/var",
                        "description": "provide args as multiple 'args' paramers in POST body",
                        "name": "args",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad or missing hash",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/corrupt/{app}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Start corruption check on all application backups of a specific type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Start app-specific corruption check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app type to check",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "missing app",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/dashboard": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Collects dashboard data and sends a notification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Send a dashboard notification",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/emptyplextrash/{libraryKeys}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Empties one or more Plex library trash cans.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers",
                    "Plex"
                ],
                "summary": "Empty Plex Trashes",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of library keys, comma separated.",
                        "name": "libraryKeys",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "started",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "501": {
                        "description": "plex not enabled",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/trigger/gaps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Send Radarr Library Collection Gaps notification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Send Collections Gaps Notification",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/notification/{content}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Write log entry, and send GUI notification if client has GUI enabled (mac/windows only).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Send Client User Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data for the notification.",
                        "name": "content",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "no content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/reload": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reload this application's configuration immediately. Reload shuts down everything re-reads the config file and starts back up.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Reload Application",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/rpsync/{instance}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sync TRaSH Sonarr data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers",
                    "TRaSH"
                ],
                "summary": "Sync TRaSH Sonarr data",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Triggers sync on this instance if provided, otherwise all instances",
                        "name": "instance",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reschedule all service checks to run immediately.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Run all service checks",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/sessions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Collect Plex sessions and send a notifciation.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Collect Plex Sessions",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "501": {
                        "description": "plex is disabled",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/trigger/snapshot": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Collects system snapshot data and sends a notification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Send a system snapshot notification",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/trigger/stuckitems": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sends cached stuck items notification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Triggers"
                ],
                "summary": "Send a stuck items notification",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/version": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns information about the client's configuration, and polls multiple applications for up-status and version.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Retrieve client info + starr/plex info.",
                "responses": {
                    "200": {
                        "description": "contains app info included appStatus",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/clientinfo.AppInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/version/{app}/{instance}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns information about the client's configuration, and polls 1 application instance for up-status and version.\nPlex and Tautulli only support app instance 1.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Retrieve client info + 1 app's info.",
                "parameters": [
                    {
                        "enum": [
                            "lidarr",
                            "prowlarr",
                            "radarr",
                            "readarr",
                            "sonarr",
                            "plex",
                            "tautulli"
                        ],
                        "type": "string",
                        "description": "Application",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Application instance (1-index).",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contains app info included appStatus",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apps.Respond.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/definitions/clientinfo.AppInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/plex": {
            "post": {
                "description": "Accepts a Plex webhook; when conditions are satisfied sends a notification to the website,\nand may include snapshot data and/or fetched session data. Does not require X-API-Key header.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Plex"
                ],
                "summary": "Accept Plex Media Server Webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plex Token or Client API Key",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "webhook payload",
                        "name": "POST",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plex.IncomingWebhook"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "208": {
                        "description": "ignored",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "bad token or api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apps.Respond.apiResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "This message contains the request-specific response payload."
                },
                "status": {
                    "description": "The status always matches the HTTP response.",
                    "type": "string"
                }
            }
        },
        "apps.deleteResponse": {
            "type": "object",
            "properties": {
                "deleted": {
                    "description": "How many items were deleted.",
                    "type": "integer"
                },
                "errors": {
                    "description": "Errors returned from the delete queries.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "found": {
                    "description": "How many items are found and attempted to be deleted.",
                    "type": "integer"
                }
            }
        },
        "apps.lidarrSearchAlbum.albumData": {
            "type": "object",
            "properties": {
                "artistId": {
                    "type": "integer"
                },
                "artistName": {
                    "type": "string"
                },
                "exists": {
                    "type": "boolean"
                },
                "files": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mbid": {
                    "type": "string"
                },
                "metadataId": {
                    "type": "integer"
                },
                "overview": {
                    "type": "string"
                },
                "profileId": {
                    "type": "integer"
                },
                "qualityId": {
                    "type": "integer"
                },
                "ratings": {
                    "type": "number"
                },
                "release": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "apps.radarrSearchMovie.movieData": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "cinemas": {
                    "type": "string"
                },
                "digital": {
                    "type": "string"
                },
                "exists": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "metadataId": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "physical": {
                    "type": "string"
                },
                "qualityId": {
                    "type": "integer"
                },
                "release": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tmdbId": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "apps.readarrSearchBook.bookData": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author Name",
                    "type": "string"
                },
                "authorId": {
                    "description": "Author ID",
                    "type": "integer"
                },
                "exists": {
                    "description": "Exists on disk or not?",
                    "type": "boolean"
                },
                "files": {
                    "description": "Number of files on disk for this book.",
                    "type": "integer"
                },
                "id": {
                    "description": "Book ID",
                    "type": "integer"
                },
                "overview": {
                    "description": "Book Overview",
                    "type": "string"
                },
                "pages": {
                    "description": "Book Page count",
                    "type": "integer"
                },
                "ratings": {
                    "description": "Rating Value",
                    "type": "number"
                },
                "release": {
                    "description": "Release Date",
                    "type": "string"
                },
                "title": {
                    "description": "Book Title",
                    "type": "string"
                }
            }
        },
        "apps.sonarrSearchSeries.seriesData": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "exists": {
                    "type": "boolean"
                },
                "first": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "languageProfileId": {
                    "type": "integer"
                },
                "monitored": {
                    "type": "boolean"
                },
                "next": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                },
                "qualityId": {
                    "type": "integer"
                },
                "seasonFolder": {
                    "type": "boolean"
                },
                "seasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.Season"
                    }
                },
                "seriesType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tvdbId": {
                    "type": "integer"
                }
            }
        },
        "cfsync.RadarrTrashPayload": {
            "type": "object",
            "properties": {
                "customFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.CustomFormat"
                    }
                },
                "error": {
                    "type": "string"
                },
                "instance": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "qualityDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.QualityDefinition"
                    }
                },
                "qualityProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.QualityProfile"
                    }
                }
            }
        },
        "cfsync.SonarrTrashPayload": {
            "type": "object",
            "properties": {
                "customFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.CustomFormat"
                    }
                },
                "error": {
                    "type": "string"
                },
                "instance": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "qualityDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.QualityDefinition"
                    }
                },
                "qualityProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.QualityProfile"
                    }
                },
                "releaseProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.ReleaseProfile"
                    }
                }
            }
        },
        "cfsync.TrashAggInput": {
            "type": "object",
            "properties": {
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "clientinfo.AppConfigs": {
            "type": "object",
            "properties": {
                "lidarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppInfoAppConfig"
                    }
                },
                "prowlarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppInfoAppConfig"
                    }
                },
                "radarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppInfoAppConfig"
                    }
                },
                "readarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppInfoAppConfig"
                    }
                },
                "sonarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppInfoAppConfig"
                    }
                },
                "tautulli": {
                    "$ref": "#/definitions/clientinfo.AppInfoTautulli"
                }
            }
        },
        "clientinfo.AppInfo": {
            "type": "object",
            "properties": {
                "appsStatus": {
                    "description": "AppsStatus is only returned on the version endpoint.",
                    "$ref": "#/definitions/clientinfo.AppStatuses"
                },
                "client": {
                    "description": "Client contains running client information.",
                    "$ref": "#/definitions/clientinfo.AppInfoClient"
                },
                "commands": {
                    "description": "Commands is the list of available commands.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cmdconfig.Config"
                    }
                },
                "config": {
                    "description": "Config contains running configuration information.",
                    "$ref": "#/definitions/clientinfo.AppInfoConfig"
                },
                "host": {
                    "description": "Host contains host info.",
                    "$ref": "#/definitions/host.InfoStat"
                },
                "hostError": {
                    "description": "HostError has data if hostinfo has an error.",
                    "type": "string"
                },
                "num": {
                    "description": "Num contains configured application counters.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "clientinfo.AppInfoAppConfig": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The site-ID for the instance (1-index).",
                    "type": "integer"
                },
                "name": {
                    "description": "Instance name as configured in the client.",
                    "type": "string"
                }
            }
        },
        "clientinfo.AppInfoClient": {
            "type": "object",
            "properties": {
                "arch": {
                    "description": "Architecture.",
                    "type": "string"
                },
                "buildDate": {
                    "description": "Application Build Date.",
                    "type": "string"
                },
                "docker": {
                    "description": "Running in docker?",
                    "type": "boolean"
                },
                "goVersion": {
                    "description": "Go Version app built with.",
                    "type": "string"
                },
                "hasGui": {
                    "description": "Application has a GUI? (windows/mac only)",
                    "type": "boolean"
                },
                "os": {
                    "description": "OS app is running on.",
                    "type": "string"
                },
                "revision": {
                    "description": "Application Revision (part of the version).",
                    "type": "string"
                },
                "started": {
                    "description": "Application start time.",
                    "type": "string"
                },
                "uptimeSec": {
                    "description": "Uptime in seconds.",
                    "type": "integer"
                },
                "version": {
                    "description": "Application Version.",
                    "type": "string"
                }
            }
        },
        "clientinfo.AppInfoConfig": {
            "type": "object",
            "properties": {
                "apps": {
                    "$ref": "#/definitions/clientinfo.AppConfigs"
                },
                "retries": {
                    "type": "integer"
                },
                "websiteTimeout": {
                    "type": "string"
                }
            }
        },
        "clientinfo.AppInfoTautulli": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "Tautulli user -\u003e email map.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "clientinfo.AppStatuses": {
            "type": "object",
            "properties": {
                "lidarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.LidarrConTest"
                    }
                },
                "plex": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.PlexConTest"
                    }
                },
                "prowlarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.ProwlarrConTest"
                    }
                },
                "radarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.RadarrConTest"
                    }
                },
                "readarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.ReadarrConTest"
                    }
                },
                "sonarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.SonarrConTest"
                    }
                },
                "tautulli": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.TautulliConTest"
                    }
                }
            }
        },
        "clientinfo.LidarrConTest": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The site-ID for the instance (1-index).",
                    "type": "integer"
                },
                "systemStatus": {
                    "$ref": "#/definitions/lidarr.SystemStatus"
                },
                "up": {
                    "description": "Up is true if the instance is reachable.",
                    "type": "boolean"
                }
            }
        },
        "clientinfo.PlexConTest": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The site-ID for the instance (1-index).",
                    "type": "integer"
                },
                "systemStatus": {
                    "$ref": "#/definitions/clientinfo.PlexInfo"
                },
                "up": {
                    "description": "Up is true if the instance is reachable.",
                    "type": "boolean"
                }
            }
        },
        "clientinfo.PlexInfo": {
            "description": "Contains some very basic Plex data, including the name and version.",
            "type": "object",
            "properties": {
                "friendlyName": {
                    "type": "string"
                },
                "myPlexSigninState": {
                    "type": "string"
                },
                "myPlexSubscription": {
                    "type": "boolean"
                },
                "platform": {
                    "type": "string"
                },
                "platformVersion": {
                    "type": "string"
                },
                "pushNotifications": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "clientinfo.ProwlarrConTest": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The site-ID for the instance (1-index).",
                    "type": "integer"
                },
                "systemStatus": {
                    "$ref": "#/definitions/prowlarr.SystemStatus"
                },
                "up": {
                    "description": "Up is true if the instance is reachable.",
                    "type": "boolean"
                }
            }
        },
        "clientinfo.RadarrConTest": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The site-ID for the instance (1-index).",
                    "type": "integer"
                },
                "systemStatus": {
                    "$ref": "#/definitions/radarr.SystemStatus"
                },
                "up": {
                    "description": "Up is true if the instance is reachable.",
                    "type": "boolean"
                }
            }
        },
        "clientinfo.ReadarrConTest": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The site-ID for the instance (1-index).",
                    "type": "integer"
                },
                "systemStatus": {
                    "$ref": "#/definitions/readarr.SystemStatus"
                },
                "up": {
                    "description": "Up is true if the instance is reachable.",
                    "type": "boolean"
                }
            }
        },
        "clientinfo.SonarrConTest": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The site-ID for the instance (1-index).",
                    "type": "integer"
                },
                "systemStatus": {
                    "$ref": "#/definitions/sonarr.SystemStatus"
                },
                "up": {
                    "description": "Up is true if the instance is reachable.",
                    "type": "boolean"
                }
            }
        },
        "clientinfo.TautulliConTest": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The site-ID for the instance (1-index).",
                    "type": "integer"
                },
                "systemStatus": {
                    "$ref": "#/definitions/tautulli.Info"
                },
                "up": {
                    "description": "Up is true if the instance is reachable.",
                    "type": "boolean"
                }
            }
        },
        "cmdconfig.Config": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "log": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notify": {
                    "type": "boolean"
                },
                "shell": {
                    "type": "boolean"
                }
            }
        },
        "host.InfoStat": {
            "type": "object",
            "properties": {
                "bootTime": {
                    "type": "integer"
                },
                "hostId": {
                    "description": "ex: uuid",
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "kernelArch": {
                    "description": "native cpu architecture queried at runtime, as returned by ` + "`" + `uname -m` + "`" + ` or empty string in case of error",
                    "type": "string"
                },
                "kernelVersion": {
                    "description": "version of the OS kernel (if available)",
                    "type": "string"
                },
                "os": {
                    "description": "ex: freebsd, linux",
                    "type": "string"
                },
                "platform": {
                    "description": "ex: ubuntu, linuxmint",
                    "type": "string"
                },
                "platformFamily": {
                    "description": "ex: debian, rhel",
                    "type": "string"
                },
                "platformVersion": {
                    "description": "version of the complete OS",
                    "type": "string"
                },
                "procs": {
                    "description": "number of processes",
                    "type": "integer"
                },
                "uptime": {
                    "type": "integer"
                },
                "virtualizationRole": {
                    "description": "guest or host",
                    "type": "string"
                },
                "virtualizationSystem": {
                    "type": "string"
                }
            }
        },
        "lidarr.AddAlbumInput": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "$ref": "#/definitions/lidarr.AlbumAddOptions"
                },
                "artist": {
                    "$ref": "#/definitions/lidarr.Artist"
                },
                "foreignAlbumId": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "releases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lidarr.AddAlbumInputRelease"
                    }
                }
            }
        },
        "lidarr.AddAlbumInputRelease": {
            "type": "object",
            "properties": {
                "foreignReleaseId": {
                    "type": "string"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lidarr.Media"
                    }
                },
                "monitored": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "lidarr.Album": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "$ref": "#/definitions/lidarr.AlbumAddOptions"
                },
                "albumType": {
                    "type": "string"
                },
                "anyReleaseOk": {
                    "type": "boolean"
                },
                "artist": {
                    "$ref": "#/definitions/lidarr.Artist"
                },
                "artistId": {
                    "type": "integer"
                },
                "disambiguation": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "foreignAlbumId": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {}
                },
                "grabbed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Link"
                    }
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lidarr.Media"
                    }
                },
                "mediumCount": {
                    "type": "integer"
                },
                "monitored": {
                    "type": "boolean"
                },
                "overview": {
                    "type": "string"
                },
                "profileId": {
                    "type": "integer"
                },
                "ratings": {
                    "$ref": "#/definitions/starr.Ratings"
                },
                "releaseDate": {
                    "type": "string"
                },
                "releases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lidarr.Release"
                    }
                },
                "remoteCover": {
                    "type": "string"
                },
                "secondaryTypes": {
                    "type": "array",
                    "items": {}
                },
                "statistics": {
                    "$ref": "#/definitions/lidarr.Statistics"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "lidarr.AlbumAddOptions": {
            "type": "object",
            "properties": {
                "searchForNewAlbum": {
                    "type": "boolean"
                }
            }
        },
        "lidarr.Artist": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "$ref": "#/definitions/lidarr.ArtistAddOptions"
                },
                "added": {
                    "type": "string"
                },
                "albumFolder": {
                    "type": "boolean"
                },
                "artistName": {
                    "type": "string"
                },
                "artistType": {
                    "type": "string"
                },
                "cleanName": {
                    "type": "string"
                },
                "disambiguation": {
                    "type": "string"
                },
                "discogsId": {
                    "type": "integer"
                },
                "ended": {
                    "type": "boolean"
                },
                "foreignArtistId": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "lastAlbum": {
                    "$ref": "#/definitions/lidarr.Album"
                },
                "lastInfoSync": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Link"
                    }
                },
                "metadataProfileId": {
                    "type": "integer"
                },
                "monitored": {
                    "type": "boolean"
                },
                "nextAlbum": {
                    "$ref": "#/definitions/lidarr.Album"
                },
                "overview": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "qualityProfileId": {
                    "type": "integer"
                },
                "ratings": {
                    "$ref": "#/definitions/starr.Ratings"
                },
                "rootFolderPath": {
                    "type": "string"
                },
                "sortName": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/lidarr.Statistics"
                },
                "status": {
                    "type": "string"
                },
                "tadbId": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "lidarr.ArtistAddOptions": {
            "type": "object",
            "properties": {
                "monitor": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "searchForMissingAlbums": {
                    "type": "boolean"
                }
            }
        },
        "lidarr.Media": {
            "type": "object",
            "properties": {
                "mediumFormat": {
                    "type": "string"
                },
                "mediumName": {
                    "type": "string"
                },
                "mediumNumber": {
                    "type": "integer"
                }
            }
        },
        "lidarr.QualityProfile": {
            "type": "object",
            "properties": {
                "cutoff": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Quality"
                    }
                },
                "name": {
                    "type": "string"
                },
                "upgradeAllowed": {
                    "type": "boolean"
                }
            }
        },
        "lidarr.Release": {
            "type": "object",
            "properties": {
                "albumId": {
                    "type": "integer"
                },
                "country": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disambiguation": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "foreignReleaseId": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lidarr.Media"
                    }
                },
                "mediumCount": {
                    "type": "integer"
                },
                "monitored": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trackCount": {
                    "type": "integer"
                }
            }
        },
        "lidarr.Statistics": {
            "type": "object",
            "properties": {
                "albumCount": {
                    "type": "integer"
                },
                "percentOfTracks": {
                    "type": "number"
                },
                "sizeOnDisk": {
                    "type": "integer"
                },
                "totalTrackCount": {
                    "type": "integer"
                },
                "trackCount": {
                    "type": "integer"
                },
                "trackFileCount": {
                    "type": "integer"
                }
            }
        },
        "lidarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isNetCore": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "migrationVersion": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "sqliteVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "plex.GUID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "plex.IncomingWebhook": {
            "type": "object",
            "properties": {
                "Account": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "thumb": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        }
                    }
                },
                "Metadata": {
                    "$ref": "#/definitions/plex.WebhookMetadata"
                },
                "Player": {
                    "type": "object",
                    "properties": {
                        "local": {
                            "type": "boolean"
                        },
                        "publicAddress": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                },
                "Server": {
                    "type": "object",
                    "properties": {
                        "title": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                },
                "event": {
                    "type": "string"
                },
                "owner": {
                    "type": "boolean"
                },
                "rating": {
                    "type": "number"
                },
                "user": {
                    "type": "boolean"
                }
            }
        },
        "plex.LibrarySection": {
            "type": "object",
            "properties": {
                "Location": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "path": {
                                "type": "string"
                            }
                        }
                    }
                },
                "agent": {
                    "type": "string"
                },
                "allowSync": {
                    "type": "boolean"
                },
                "art": {
                    "type": "string"
                },
                "composite": {
                    "type": "string"
                },
                "content": {
                    "type": "boolean"
                },
                "contentChangedAt": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "integer"
                },
                "directory": {
                    "type": "boolean"
                },
                "filters": {
                    "type": "boolean"
                },
                "hidden": {
                    "type": "integer"
                },
                "key": {
                    "description": "this is the ID.",
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "refreshing": {
                    "type": "boolean"
                },
                "scannedAt": {
                    "type": "integer"
                },
                "scanner": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "plex.Media": {
            "type": "object",
            "properties": {
                "Part": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.MediaPart"
                    }
                },
                "aspectRatio": {
                    "type": "string"
                },
                "audioChannels": {
                    "type": "integer"
                },
                "audioCodec": {
                    "type": "string"
                },
                "audioProfile": {
                    "type": "string"
                },
                "bitrate": {
                    "type": "number"
                },
                "container": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "optimizedForStreaming": {
                    "type": "boolean"
                },
                "protocol": {
                    "type": "string"
                },
                "selected": {
                    "type": "boolean"
                },
                "videoCodec": {
                    "type": "string"
                },
                "videoFrameRate": {
                    "type": "string"
                },
                "videoProfile": {
                    "type": "string"
                },
                "videoResolution": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "plex.MediaPart": {
            "type": "object",
            "properties": {
                "Stream": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.MediaStream"
                    }
                },
                "audioProfile": {
                    "type": "string"
                },
                "bitrate": {
                    "type": "number"
                },
                "container": {
                    "type": "string"
                },
                "decision": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "file": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "indexes": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "optimizedForStreaming": {
                    "type": "boolean"
                },
                "protocol": {
                    "type": "string"
                },
                "selected": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "videoProfile": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "plex.MediaStream": {
            "type": "object",
            "properties": {
                "audioChannelLayout": {
                    "type": "string"
                },
                "bitDepth": {
                    "type": "integer"
                },
                "bitrate": {
                    "type": "number"
                },
                "bitrateMode": {
                    "type": "string"
                },
                "channels": {
                    "type": "integer"
                },
                "chromaLocation": {
                    "type": "string"
                },
                "chromaSubsampling": {
                    "type": "string"
                },
                "codec": {
                    "type": "string"
                },
                "codedHeight": {
                    "type": "integer"
                },
                "codedWidth": {
                    "type": "integer"
                },
                "colorPrimaries": {
                    "type": "string"
                },
                "colorTrc": {
                    "type": "string"
                },
                "decision": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "displayTitle": {
                    "type": "string"
                },
                "extendedDisplayTitle": {
                    "type": "string"
                },
                "frameRate": {
                    "type": "number"
                },
                "hasScalingMatrix": {
                    "type": "boolean"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "languageCode": {
                    "type": "string"
                },
                "languageTag": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                },
                "refFrames": {
                    "type": "integer"
                },
                "samplingRate": {
                    "type": "integer"
                },
                "scanType": {
                    "type": "string"
                },
                "selected": {
                    "type": "boolean"
                },
                "streamType": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "plex.Player": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "local": {
                    "type": "boolean"
                },
                "machineIdentifier": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "platformVersion": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                },
                "relayed": {
                    "type": "boolean"
                },
                "remotePublicAddress": {
                    "type": "string"
                },
                "secure": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string"
                },
                "stateTime": {
                    "description": "this is not a plex item. We calculate this.",
                    "$ref": "#/definitions/plex.structDur"
                },
                "title": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "vendor": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "plex.Rating": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "plex.SectionDirectory": {
            "type": "object",
            "properties": {
                "Directory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.LibrarySection"
                    }
                },
                "allowSync": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "title1": {
                    "type": "string"
                }
            }
        },
        "plex.Session": {
            "type": "object",
            "properties": {
                "Guid": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.GUID"
                    }
                },
                "Media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.Media"
                    }
                },
                "Player": {
                    "$ref": "#/definitions/plex.Player"
                },
                "Rating": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.Rating"
                    }
                },
                "Session": {
                    "type": "object",
                    "properties": {
                        "bandwidth": {
                            "type": "integer"
                        },
                        "id": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        }
                    }
                },
                "TranscodeSession": {
                    "$ref": "#/definitions/plex.Transcode"
                },
                "User": {
                    "$ref": "#/definitions/plex.User"
                },
                "addedAt": {
                    "type": "integer"
                },
                "art": {
                    "type": "string"
                },
                "audienceRating": {
                    "type": "number"
                },
                "audienceRatingImage": {
                    "type": "string"
                },
                "contentRating": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "grandparentArt": {
                    "type": "string"
                },
                "grandparentGuid": {
                    "type": "string"
                },
                "grandparentKey": {
                    "type": "string"
                },
                "grandparentRatingKey": {
                    "type": "string"
                },
                "grandparentTheme": {
                    "type": "string"
                },
                "grandparentThumb": {
                    "type": "string"
                },
                "grandparentTitle": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "lastViewedAt": {
                    "type": "integer"
                },
                "librarySectionID": {
                    "type": "string"
                },
                "librarySectionKey": {
                    "type": "string"
                },
                "librarySectionTitle": {
                    "type": "string"
                },
                "originallyAvailableAt": {
                    "type": "string"
                },
                "parentGuid": {
                    "type": "string"
                },
                "parentIndex": {
                    "type": "integer"
                },
                "parentKey": {
                    "type": "string"
                },
                "parentRatingKey": {
                    "type": "string"
                },
                "parentThumb": {
                    "type": "string"
                },
                "parentTitle": {
                    "type": "string"
                },
                "primaryExtraKey": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "ratingImage": {
                    "type": "string"
                },
                "ratingKey": {
                    "type": "string"
                },
                "sessionKey": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "titleSort": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "viewCount": {
                    "type": "integer"
                },
                "viewOffset": {
                    "type": "number"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "plex.Sessions": {
            "type": "object",
            "properties": {
                "hostId": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.Session"
                    }
                }
            }
        },
        "plex.Transcode": {
            "type": "object",
            "properties": {
                "audioChannels": {
                    "type": "integer"
                },
                "audioCodec": {
                    "type": "string"
                },
                "audioDecision": {
                    "type": "string"
                },
                "complete": {
                    "type": "boolean"
                },
                "container": {
                    "type": "string"
                },
                "context": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "maxOffsetAvailable": {
                    "type": "number"
                },
                "minOffsetAvailable": {
                    "type": "number"
                },
                "progress": {
                    "type": "number"
                },
                "protocol": {
                    "type": "string"
                },
                "remaining": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "sourceAudioCodec": {
                    "type": "string"
                },
                "sourceVideoCodec": {
                    "type": "string"
                },
                "speed": {
                    "type": "number"
                },
                "throttled": {
                    "type": "boolean"
                },
                "timeStamp": {
                    "type": "number"
                },
                "transcodeHwFullPipeline": {
                    "type": "boolean"
                },
                "transcodeHwRequested": {
                    "type": "boolean"
                },
                "videoCodec": {
                    "type": "string"
                },
                "videoDecision": {
                    "type": "string"
                }
            }
        },
        "plex.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "plex.WebhookMetadata": {
            "type": "object",
            "properties": {
                "Guid": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.GUID"
                    }
                },
                "Rating": {
                    "description": "bullshit."
                },
                "addedAt": {
                    "type": "integer"
                },
                "art": {
                    "type": "string"
                },
                "audienceRating": {
                    "type": "number"
                },
                "audienceRatingImage": {
                    "type": "string"
                },
                "contentRating": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "grandparentArt": {
                    "type": "string"
                },
                "grandparentGuid": {
                    "type": "string"
                },
                "grandparentKey": {
                    "type": "string"
                },
                "grandparentRatingKey": {
                    "type": "string"
                },
                "grandparentTheme": {
                    "type": "string"
                },
                "grandparentThumb": {
                    "type": "string"
                },
                "grandparentTitle": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "lastViewedAt": {
                    "type": "integer"
                },
                "librarySectionID": {
                    "description": "int (plex) or string (session tracker)"
                },
                "librarySectionKey": {
                    "type": "string"
                },
                "librarySectionTitle": {
                    "type": "string"
                },
                "librarySectionType": {
                    "type": "string"
                },
                "originallyAvailableAt": {
                    "type": "string"
                },
                "parentGuid": {
                    "type": "string"
                },
                "parentIndex": {
                    "type": "integer"
                },
                "parentKey": {
                    "type": "string"
                },
                "parentRatingKey": {
                    "type": "string"
                },
                "parentThumb": {
                    "type": "string"
                },
                "parentTitle": {
                    "type": "string"
                },
                "parentYear": {
                    "type": "integer"
                },
                "primaryExtraKey": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "ratingImage": {
                    "type": "string"
                },
                "ratingKey": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "tagline": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "titleSort": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "viewOffset": {
                    "type": "number"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "plex.structDur": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "prowlarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "databaseType": {
                    "type": "string"
                },
                "databaseVersion": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isMono": {
                    "type": "boolean"
                },
                "isNetCore": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "migrationVersion": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "radarr.AddMovieInput": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "$ref": "#/definitions/radarr.AddMovieOptions"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "minimumAvailability": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "profileId": {
                    "type": "integer"
                },
                "qualityProfileId": {
                    "type": "integer"
                },
                "rootFolderPath": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                },
                "titleSlug": {
                    "type": "string"
                },
                "tmdbId": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "radarr.AddMovieOptions": {
            "type": "object",
            "properties": {
                "searchForMovie": {
                    "type": "boolean"
                }
            }
        },
        "radarr.AlternativeTitle": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "language": {
                    "$ref": "#/definitions/starr.Value"
                },
                "movieId": {
                    "type": "integer"
                },
                "movieMetadataId": {
                    "type": "integer"
                },
                "sourceId": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "voteCount": {
                    "type": "integer"
                },
                "votes": {
                    "type": "integer"
                }
            }
        },
        "radarr.Collection": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "name": {
                    "type": "string"
                },
                "tmdbId": {
                    "type": "integer"
                }
            }
        },
        "radarr.CustomFormat": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "includeCustomFormatWhenRenaming": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "specifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.CustomFormatSpec"
                    }
                }
            }
        },
        "radarr.CustomFormatField": {
            "type": "object",
            "properties": {
                "advanced": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "description": "should be a string, but sometimes it's a number."
                }
            }
        },
        "radarr.CustomFormatSpec": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.CustomFormatField"
                    }
                },
                "implementation": {
                    "type": "string"
                },
                "implementationName": {
                    "type": "string"
                },
                "infoLink": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                }
            }
        },
        "radarr.Exclusion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "movieTitle": {
                    "type": "string"
                },
                "movieYear": {
                    "type": "integer"
                },
                "tmdbId": {
                    "type": "integer"
                }
            }
        },
        "radarr.Field": {
            "type": "object",
            "properties": {
                "advanced": {
                    "type": "boolean"
                },
                "helpText": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "selectOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.SelectOption"
                    }
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "description": "sometimes number, sometimes string. 'Type' may tell you."
                }
            }
        },
        "radarr.ImportList": {
            "type": "object",
            "properties": {
                "configContract": {
                    "type": "string"
                },
                "enableAuto": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.Field"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "implementation": {
                    "type": "string"
                },
                "implementationName": {
                    "type": "string"
                },
                "infoLink": {
                    "type": "string"
                },
                "listOrder": {
                    "type": "integer"
                },
                "listType": {
                    "type": "string"
                },
                "minimumAvailability": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "qualityProfileId": {
                    "type": "integer"
                },
                "rootFolderPath": {
                    "type": "string"
                },
                "searchOnAdd": {
                    "type": "boolean"
                },
                "shouldMonitor": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "radarr.MediaInfo": {
            "type": "object",
            "properties": {
                "audioAdditionalFeatures": {
                    "type": "string"
                },
                "audioBitrate": {
                    "type": "integer"
                },
                "audioChannels": {
                    "type": "number"
                },
                "audioCodec": {
                    "type": "string"
                },
                "audioLanguages": {
                    "type": "string"
                },
                "audioStreamCount": {
                    "type": "integer"
                },
                "resolution": {
                    "type": "string"
                },
                "runTime": {
                    "type": "string"
                },
                "scanType": {
                    "type": "string"
                },
                "subtitles": {
                    "type": "string"
                },
                "videoBitDepth": {
                    "type": "integer"
                },
                "videoBitrate": {
                    "type": "integer"
                },
                "videoCodec": {
                    "type": "string"
                },
                "videoDynamicRangeType": {
                    "type": "string"
                },
                "videoFps": {
                    "type": "number"
                }
            }
        },
        "radarr.Movie": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "description": "only available upon adding a movie.",
                    "$ref": "#/definitions/radarr.AddMovieOptions"
                },
                "added": {
                    "type": "string"
                },
                "alternateTitles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.AlternativeTitle"
                    }
                },
                "certification": {
                    "type": "string"
                },
                "cleanTitle": {
                    "type": "string"
                },
                "collection": {
                    "$ref": "#/definitions/radarr.Collection"
                },
                "digitalRelease": {
                    "type": "string"
                },
                "folderName": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hasFile": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "imdbId": {
                    "type": "string"
                },
                "inCinemas": {
                    "type": "string"
                },
                "isAvailable": {
                    "type": "boolean"
                },
                "minimumAvailability": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "movieFile": {
                    "$ref": "#/definitions/radarr.MovieFile"
                },
                "originalLanguage": {
                    "$ref": "#/definitions/starr.Value"
                },
                "originalTitle": {
                    "type": "string"
                },
                "overview": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "physicalRelease": {
                    "type": "string"
                },
                "popularity": {
                    "type": "number"
                },
                "qualityProfileId": {
                    "type": "integer"
                },
                "ratings": {
                    "$ref": "#/definitions/starr.OpenRatings"
                },
                "runtime": {
                    "type": "integer"
                },
                "secondaryYearSourceId": {
                    "type": "integer"
                },
                "sizeOnDisk": {
                    "type": "integer"
                },
                "sortTitle": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                },
                "titleSlug": {
                    "type": "string"
                },
                "tmdbId": {
                    "type": "integer"
                },
                "website": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                },
                "youTubeTrailerId": {
                    "type": "string"
                }
            }
        },
        "radarr.MovieFile": {
            "type": "object",
            "properties": {
                "dateAdded": {
                    "type": "string"
                },
                "edition": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "indexerFlags": {
                    "type": "integer"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Value"
                    }
                },
                "mediaInfo": {
                    "$ref": "#/definitions/radarr.MediaInfo"
                },
                "movieId": {
                    "type": "integer"
                },
                "originalFilePath": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "quality": {
                    "$ref": "#/definitions/starr.Quality"
                },
                "qualityCutoffNotMet": {
                    "type": "boolean"
                },
                "relativePath": {
                    "type": "string"
                },
                "releaseGroup": {
                    "type": "string"
                },
                "sceneName": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "radarr.Naming": {
            "type": "object",
            "properties": {
                "colonReplacementFormat": {
                    "type": "string"
                },
                "id": {
                    "description": "ID must always be 1 (Oct 10, 2022)",
                    "type": "integer"
                },
                "includeQuality": {
                    "type": "boolean"
                },
                "movieFolderFormat": {
                    "description": "required",
                    "type": "string"
                },
                "numberStylet": {
                    "type": "string"
                },
                "renameMovies": {
                    "type": "boolean"
                },
                "replaceIllegalCharacters": {
                    "type": "boolean"
                },
                "replaceSpaces": {
                    "type": "boolean"
                },
                "separatort": {
                    "type": "string"
                },
                "standardMovieFormat": {
                    "description": "required",
                    "type": "string"
                }
            }
        },
        "radarr.QualityDefinition": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "maxSize": {
                    "type": "number"
                },
                "minSize": {
                    "type": "number"
                },
                "preferredSize": {
                    "type": "number"
                },
                "quality": {
                    "$ref": "#/definitions/starr.BaseQuality"
                },
                "title": {
                    "type": "string"
                },
                "weight": {
                    "description": "This should not be changed.",
                    "type": "integer"
                }
            }
        },
        "radarr.QualityProfile": {
            "type": "object",
            "properties": {
                "cutoff": {
                    "type": "integer"
                },
                "cutoffFormatScore": {
                    "type": "integer"
                },
                "formatItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.FormatItem"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Quality"
                    }
                },
                "language": {
                    "$ref": "#/definitions/starr.Value"
                },
                "minFormatScore": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "upgradeAllowed": {
                    "type": "boolean"
                }
            }
        },
        "radarr.SelectOption": {
            "type": "object",
            "properties": {
                "dividerAfter": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "radarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "databaseType": {
                    "type": "string"
                },
                "databaseVersion": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isNetCore": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "migrationVersion": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "readarr.AddAuthorOptions": {
            "type": "object",
            "properties": {
                "booksToMonitor": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "monitor": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "searchForMissingBooks": {
                    "type": "boolean"
                }
            }
        },
        "readarr.AddBookAuthor": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "$ref": "#/definitions/readarr.AddAuthorOptions"
                },
                "foreignAuthorId": {
                    "description": "required",
                    "type": "string"
                },
                "metadataProfileId": {
                    "description": "required",
                    "type": "integer"
                },
                "monitored": {
                    "description": "true?",
                    "type": "boolean"
                },
                "qualityProfileId": {
                    "description": "required",
                    "type": "integer"
                },
                "rootFolderPath": {
                    "description": "required",
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "readarr.AddBookEdition": {
            "type": "object",
            "properties": {
                "foreignEditionId": {
                    "description": "GRID ID",
                    "type": "string"
                },
                "images": {
                    "description": "this is dumb too",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "manualAdd": {
                    "description": "true",
                    "type": "boolean"
                },
                "monitored": {
                    "description": "true",
                    "type": "boolean"
                },
                "title": {
                    "description": "Edition Title",
                    "type": "string"
                },
                "titleSlug": {
                    "description": "Slugs are dumb",
                    "type": "string"
                }
            }
        },
        "readarr.AddBookInput": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "description": "Contains Search.",
                    "$ref": "#/definitions/readarr.AddBookOptions"
                },
                "author": {
                    "description": "Contains Author ID",
                    "$ref": "#/definitions/readarr.AddBookAuthor"
                },
                "editions": {
                    "description": "contains GRID Edition ID",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/readarr.AddBookEdition"
                    }
                },
                "foreignBookId": {
                    "description": "GRID Book ID.",
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "readarr.AddBookOptions": {
            "type": "object",
            "properties": {
                "addType": {
                    "type": "string"
                },
                "searchForNewBook": {
                    "type": "boolean"
                }
            }
        },
        "readarr.Author": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "authorMetadataId": {
                    "type": "integer"
                },
                "authorName": {
                    "type": "string"
                },
                "authorNameLastFirst": {
                    "type": "string"
                },
                "cleanName": {
                    "type": "string"
                },
                "ended": {
                    "type": "boolean"
                },
                "foreignAuthorId": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "lastBook": {
                    "$ref": "#/definitions/readarr.AuthorBook"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Link"
                    }
                },
                "metadataProfileId": {
                    "type": "integer"
                },
                "monitorNewItems": {
                    "type": "string"
                },
                "monitored": {
                    "type": "boolean"
                },
                "nextBook": {
                    "$ref": "#/definitions/readarr.AuthorBook"
                },
                "overview": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "qualityProfileId": {
                    "type": "integer"
                },
                "ratings": {
                    "$ref": "#/definitions/starr.Ratings"
                },
                "sortName": {
                    "type": "string"
                },
                "sortNameLastFirst": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/readarr.Statistics"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "titleSlug": {
                    "type": "string"
                }
            }
        },
        "readarr.AuthorBook": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "$ref": "#/definitions/readarr.AddBookOptions"
                },
                "added": {
                    "type": "string"
                },
                "anyEditionOk": {
                    "type": "boolean"
                },
                "author": {
                    "$ref": "#/definitions/starr.IsLoaded"
                },
                "authorMetadata": {
                    "$ref": "#/definitions/starr.IsLoaded"
                },
                "authorMetadataId": {
                    "type": "integer"
                },
                "bookFiles": {
                    "$ref": "#/definitions/starr.IsLoaded"
                },
                "cleanTitle": {
                    "type": "string"
                },
                "editions": {
                    "$ref": "#/definitions/starr.IsLoaded"
                },
                "foreignBookId": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "lastInfoSync": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Link"
                    }
                },
                "monitored": {
                    "type": "boolean"
                },
                "ratings": {
                    "$ref": "#/definitions/starr.Ratings"
                },
                "releaseDate": {
                    "type": "string"
                },
                "seriesLinks": {
                    "$ref": "#/definitions/starr.IsLoaded"
                },
                "title": {
                    "type": "string"
                },
                "titleSlug": {
                    "type": "string"
                }
            }
        },
        "readarr.Book": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "anyEditionOk": {
                    "type": "boolean"
                },
                "author": {
                    "$ref": "#/definitions/readarr.Author"
                },
                "authorId": {
                    "type": "integer"
                },
                "authorTitle": {
                    "type": "string"
                },
                "disambiguation": {
                    "type": "string"
                },
                "editions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/readarr.Edition"
                    }
                },
                "foreignBookId": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grabbed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Link"
                    }
                },
                "monitored": {
                    "type": "boolean"
                },
                "overview": {
                    "type": "string"
                },
                "pageCount": {
                    "type": "integer"
                },
                "ratings": {
                    "$ref": "#/definitions/starr.Ratings"
                },
                "releaseDate": {
                    "type": "string"
                },
                "remoteCover": {
                    "type": "string"
                },
                "seriesTitle": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/readarr.Statistics"
                },
                "title": {
                    "type": "string"
                },
                "titleSlug": {
                    "type": "string"
                }
            }
        },
        "readarr.Edition": {
            "type": "object",
            "properties": {
                "asin": {
                    "type": "string"
                },
                "bookId": {
                    "type": "integer"
                },
                "foreignEditionId": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "isEbook": {
                    "type": "boolean"
                },
                "isbn13": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Link"
                    }
                },
                "manualAdd": {
                    "type": "boolean"
                },
                "monitored": {
                    "type": "boolean"
                },
                "overview": {
                    "type": "string"
                },
                "pageCount": {
                    "type": "integer"
                },
                "publisher": {
                    "type": "string"
                },
                "ratings": {
                    "$ref": "#/definitions/starr.Ratings"
                },
                "releaseDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "titleSlug": {
                    "type": "string"
                }
            }
        },
        "readarr.QualityProfile": {
            "type": "object",
            "properties": {
                "cutoff": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Quality"
                    }
                },
                "name": {
                    "type": "string"
                },
                "upgradeAllowed": {
                    "type": "boolean"
                }
            }
        },
        "readarr.Statistics": {
            "type": "object",
            "properties": {
                "availableBookCount": {
                    "type": "integer"
                },
                "bookCount": {
                    "type": "integer"
                },
                "bookFileCount": {
                    "type": "integer"
                },
                "percentOfBooks": {
                    "type": "number"
                },
                "sizeOnDisk": {
                    "type": "integer"
                },
                "totalBookCount": {
                    "type": "integer"
                }
            }
        },
        "readarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "databaseType": {
                    "type": "string"
                },
                "databaseVersion": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isMono": {
                    "type": "boolean"
                },
                "isNetCore": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "migrationVersion": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "sonarr.AddSeriesInput": {
            "type": "object",
            "properties": {
                "addOptions": {
                    "description": "to be used only on POST, not for PUT",
                    "$ref": "#/definitions/sonarr.AddSeriesOptions"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "imdbId": {
                    "type": "string"
                },
                "languageProfileId": {
                    "type": "integer"
                },
                "monitored": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "qualityProfileId": {
                    "type": "integer"
                },
                "rootFolderPath": {
                    "type": "string"
                },
                "seasonFolder": {
                    "type": "boolean"
                },
                "seasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.Season"
                    }
                },
                "seriesType": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                },
                "titleSlug": {
                    "type": "string"
                },
                "tvMazeId": {
                    "type": "integer"
                },
                "tvRageId": {
                    "type": "integer"
                },
                "tvdbId": {
                    "type": "integer"
                },
                "useSceneNumbering": {
                    "type": "boolean"
                }
            }
        },
        "sonarr.AddSeriesOptions": {
            "type": "object",
            "properties": {
                "ignoreEpisodesWithFiles": {
                    "type": "boolean"
                },
                "ignoreEpisodesWithoutFiles": {
                    "type": "boolean"
                },
                "searchForCutoffUnmetEpisodes": {
                    "type": "boolean"
                },
                "searchForMissingEpisodes": {
                    "type": "boolean"
                }
            }
        },
        "sonarr.AlternateTitle": {
            "type": "object",
            "properties": {
                "seasonNumber": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "sonarr.CommandRequest": {
            "type": "object",
            "properties": {
                "episodeId": {
                    "type": "integer"
                },
                "episodeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "files": {
                    "description": "RenameFiles only",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "seriesId": {
                    "type": "integer"
                },
                "seriesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "sonarr.CommandResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "additionalProperties": true
                },
                "commandName": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "ended": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastExecutionTime": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "queued": {
                    "type": "string"
                },
                "sendUpdatesToClient": {
                    "type": "boolean"
                },
                "started": {
                    "type": "string"
                },
                "stateChangeTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trigger": {
                    "type": "string"
                },
                "updateScheduledTask": {
                    "type": "boolean"
                }
            }
        },
        "sonarr.CustomFormat": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "includeCustomFormatWhenRenaming": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "specifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.CustomFormatSpec"
                    }
                }
            }
        },
        "sonarr.CustomFormatField": {
            "type": "object",
            "properties": {
                "advanced": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "description": "should be a string, but sometimes it's a number."
                }
            }
        },
        "sonarr.CustomFormatSpec": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.CustomFormatField"
                    }
                },
                "implementation": {
                    "type": "string"
                },
                "implementationName": {
                    "type": "string"
                },
                "infoLink": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                }
            }
        },
        "sonarr.Episode": {
            "type": "object",
            "properties": {
                "absoluteEpisodeNumber": {
                    "type": "integer"
                },
                "airDate": {
                    "type": "string"
                },
                "airDateUtc": {
                    "type": "string"
                },
                "episodeFileId": {
                    "type": "integer"
                },
                "episodeNumber": {
                    "type": "integer"
                },
                "hasFile": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "monitored": {
                    "type": "boolean"
                },
                "overview": {
                    "type": "string"
                },
                "seasonNumber": {
                    "type": "integer"
                },
                "series": {
                    "$ref": "#/definitions/sonarr.Series"
                },
                "seriesId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "tvdbId": {
                    "type": "integer"
                },
                "unverifiedSceneNumbering": {
                    "type": "boolean"
                }
            }
        },
        "sonarr.MonitoredSeries": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "monitored": {
                    "type": "boolean"
                }
            }
        },
        "sonarr.MonitoringOptions": {
            "type": "object",
            "properties": {
                "monitor": {
                    "description": "Valid values for Monitor are: all, future, missing, existing, firstSeason, latestSeason, and none.",
                    "type": "string"
                }
            }
        },
        "sonarr.Naming": {
            "type": "object",
            "properties": {
                "animeEpisodeFormat": {
                    "type": "string"
                },
                "dailyEpisodeFormat": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "includeEpisodeTitle": {
                    "type": "boolean"
                },
                "includeQuality": {
                    "type": "boolean"
                },
                "includeSeriesTitle": {
                    "type": "boolean"
                },
                "multiEpisodeStyle": {
                    "type": "integer"
                },
                "numberStyle": {
                    "type": "string"
                },
                "renameEpisodes": {
                    "type": "boolean"
                },
                "replaceIllegalCharacters": {
                    "type": "boolean"
                },
                "replaceSpaces": {
                    "type": "boolean"
                },
                "seasonFolderFormat": {
                    "type": "string"
                },
                "separator": {
                    "type": "string"
                },
                "seriesFolderFormat": {
                    "type": "string"
                },
                "specialsFolderFormat": {
                    "type": "string"
                },
                "standardEpisodeFormat": {
                    "type": "string"
                }
            }
        },
        "sonarr.QualityDefinition": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "maxSize": {
                    "type": "number"
                },
                "minSize": {
                    "type": "number"
                },
                "preferredSize": {
                    "description": "v4 only.",
                    "type": "number"
                },
                "quality": {
                    "$ref": "#/definitions/starr.BaseQuality"
                },
                "title": {
                    "type": "string"
                },
                "weight": {
                    "description": "This should not be changed.",
                    "type": "integer"
                }
            }
        },
        "sonarr.QualityProfile": {
            "type": "object",
            "properties": {
                "cutoff": {
                    "type": "integer"
                },
                "cutoffFormatScore": {
                    "description": "v4 only.",
                    "type": "integer"
                },
                "formatItems": {
                    "description": "v4 only.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.FormatItem"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Quality"
                    }
                },
                "language": {
                    "description": "v4 only.",
                    "$ref": "#/definitions/starr.Value"
                },
                "minFormatScore": {
                    "description": "v4 only.",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "upgradeAllowed": {
                    "type": "boolean"
                }
            }
        },
        "sonarr.ReleaseProfile": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "ignored": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includePreferredWhenRenaming": {
                    "description": "V3 only, removed from v4.",
                    "type": "boolean"
                },
                "indexerId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "preferred": {
                    "description": "V3 only, removed from v4.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.KeyValue"
                    }
                },
                "required": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "sonarr.Season": {
            "type": "object",
            "properties": {
                "monitored": {
                    "type": "boolean"
                },
                "seasonNumber": {
                    "type": "integer"
                },
                "statistics": {
                    "$ref": "#/definitions/sonarr.Statistics"
                }
            }
        },
        "sonarr.SeasonPass": {
            "type": "object",
            "properties": {
                "monitoringOptions": {
                    "$ref": "#/definitions/sonarr.MonitoringOptions"
                },
                "series": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.MonitoredSeries"
                    }
                }
            }
        },
        "sonarr.Series": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "airTime": {
                    "type": "string"
                },
                "alternateTitles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.AlternateTitle"
                    }
                },
                "certification": {
                    "type": "string"
                },
                "cleanTitle": {
                    "type": "string"
                },
                "ended": {
                    "type": "boolean"
                },
                "firstAired": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Image"
                    }
                },
                "imdbId": {
                    "type": "string"
                },
                "languageProfileId": {
                    "type": "integer"
                },
                "monitored": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "nextAiring": {
                    "type": "string"
                },
                "overview": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "previousAiring": {
                    "type": "string"
                },
                "qualityProfileId": {
                    "type": "integer"
                },
                "ratings": {
                    "$ref": "#/definitions/starr.Ratings"
                },
                "rootFolderPath": {
                    "type": "string"
                },
                "runtime": {
                    "type": "integer"
                },
                "seasonFolder": {
                    "type": "boolean"
                },
                "seasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.Season"
                    }
                },
                "seriesType": {
                    "type": "string"
                },
                "sortTitle": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/sonarr.Statistics"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                },
                "titleSlug": {
                    "type": "string"
                },
                "tvMazeId": {
                    "type": "integer"
                },
                "tvRageId": {
                    "type": "integer"
                },
                "tvdbId": {
                    "type": "integer"
                },
                "useSceneNumbering": {
                    "type": "boolean"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "sonarr.Statistics": {
            "type": "object",
            "properties": {
                "episodeCount": {
                    "type": "integer"
                },
                "episodeFileCount": {
                    "type": "integer"
                },
                "percentOfEpisodes": {
                    "type": "number"
                },
                "previousAiring": {
                    "type": "string"
                },
                "seasonCount": {
                    "type": "integer"
                },
                "sizeOnDisk": {
                    "type": "integer"
                },
                "totalEpisodeCount": {
                    "type": "integer"
                }
            }
        },
        "sonarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isMono": {
                    "type": "boolean"
                },
                "isMonoRuntime": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "sqliteVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "starr.BaseQuality": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "modifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resolution": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "starr.FormatItem": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "starr.Image": {
            "type": "object",
            "properties": {
                "coverType": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "remoteUrl": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "starr.IsLoaded": {
            "type": "object",
            "properties": {
                "isLoaded": {
                    "type": "boolean"
                }
            }
        },
        "starr.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "starr.Link": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "starr.OpenRatings": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/starr.Ratings"
            }
        },
        "starr.Quality": {
            "type": "object",
            "properties": {
                "allowed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Quality"
                    }
                },
                "name": {
                    "type": "string"
                },
                "quality": {
                    "$ref": "#/definitions/starr.BaseQuality"
                },
                "revision": {
                    "description": "Not sure which app had this....",
                    "$ref": "#/definitions/starr.QualityRevision"
                }
            }
        },
        "starr.QualityRevision": {
            "type": "object",
            "properties": {
                "isRepack": {
                    "type": "boolean"
                },
                "real": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "starr.Ratings": {
            "type": "object",
            "properties": {
                "popularity": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "votes": {
                    "type": "integer"
                }
            }
        },
        "starr.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "starr.Value": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "tautulli.Info": {
            "type": "object",
            "properties": {
                "tautulli_branch": {
                    "type": "string"
                },
                "tautulli_commit": {
                    "type": "string"
                },
                "tautulli_install_type": {
                    "type": "string"
                },
                "tautulli_platform": {
                    "type": "string"
                },
                "tautulli_platform_device_name": {
                    "type": "string"
                },
                "tautulli_platform_linux_distro": {
                    "type": "string"
                },
                "tautulli_platform_release": {
                    "type": "string"
                },
                "tautulli_platform_version": {
                    "type": "string"
                },
                "tautulli_python_version": {
                    "type": "string"
                },
                "tautulli_version": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfoapi holds exported Swagger Info so clients can modify it
var SwaggerInfoapi = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Notifiarr Client API Docs",
	Description:      "Notifiarr Client monitors local services and sends notifications.",
	InfoInstanceName: "api",
	SwaggerTemplate:  docTemplateapi,
}

func init() {
	swag.Register(SwaggerInfoapi.InstanceName(), SwaggerInfoapi)
}
