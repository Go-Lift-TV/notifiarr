# Powered by Application Builder: https://github.com/golift/application-builder
jobs:
  include:
  - if: tag IS present OR branch = unstable
    os: osx
    osx_image: xcode13.2
    language: go
    go: 1.19.x
  - if: tag IS present OR branch = unstable
    os: linux
    dist: bionic
    services: docker
    language: go
    go: 1.19.x
git:
  depth: false
addons:
  homebrew:
    packages:
    - mitchellh/gon/gon
  apt:
    packages:
    - ruby-dev
    - rpm
    - build-essential
    - git
    - libgnome-keyring-dev
    - fakeroot
    - zip
    - debsigs
    - gnupg
install:
  - mkdir -p $(go env GOPATH)/bin
  - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.48.0
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm install 2.6.0; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm 2.6.0 do gem install --no-document fpm -v 1.11.0; fi
  - go install github.com/swaggo/swag/cmd/swag@v1.8.7
  - go install github.com/kevinburke/go-bindata/...@latest
  - go install github.com/davidnewhall/md2roff@v0.0.1
  - go install github.com/akavel/rsrc@latest
before_script:
  # Create your own deploy key, tar it, and encrypt the file to make this work. Optionally add a bitly_token file to the archive.
  - openssl aes-256-cbc -K $encrypted_772fc4772f04_key -iv $encrypted_772fc4772f04_iv -in .secret_files.tar.enc -out .secret_files.tar -d
  - tar -xf .secret_files.tar
  - gpg --import gpg.signing.key
  - rm -f gpg.signing.key .secret_files.tar
  - source settings.sh
script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm 2.6.0 do make release; fi
  # Build mac binary or image.
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then make signdmg; fi
after_success:
  # Display Release Folder
  - ls -l release/
  # Setup the ssh client so we can clone and push to the homebrew formula repo.
  # You must put github_deploy_file into .secret_files.tar.enc
  # This is an ssh key added to your homebrew forumla repo.
  - |
    mkdir -p $HOME/.ssh
    declare -r HB_FILE="$(mktemp -u $HOME/.ssh/XXXXX)"
    [ ! -f github_deploy_key ] || (mv github_deploy_key "${HB_FILE}" \
      && chmod 600 "$HB_FILE" \
      && printf "%s\n" \
        "Host github.com" \
        "  HostName github.com" \
        "  IdentityFile ${HB_FILE}" \
        "  StrictHostKeyChecking no" \
        "  LogLevel ERROR" >> $HOME/.ssh/config)
    declare -r AU_FILE="$(mktemp -u $HOME/.ssh/XXXXX)"
    [ ! -f aur_deploy_key ] || (mv aur_deploy_key "${AU_FILE}" \
      && chmod 600 "${AU_FILE}" \
      && printf "%s\n" \
        "Host github.com-aurepo" \
        "  HostName github.com" \
        "  IdentityFile ${AU_FILE}" \
        "  StrictHostKeyChecking no" \
        "  LogLevel ERROR" >> $HOME/.ssh/config)
deploy:
  # Unstable (master pushes).
  - provider: packagecloud
    repository: unstable
    username: golift
    token:
      secure: PuwkeI7VlBBEpg9b6KsQy4lDEt10dQuDsZ1qVQBEllqUmpfRbn2EGk8b7nTiRTjfCVT9u1FX4I43MN/IBdgJPg9fI3YQcg5/lbEUrqDLtgo/MsP8pvMnXuhU+JuROdOHJP7/mVJrOOjDJBykTkHgtHhUcd7DcgNL5wytVdxU9szbeSns1MDK6ZPN2zxGYj9H7hmGGPWXSyNFwl87fL9629KEXUh7Ad85/G/EACdv1USz3ZHjOVt7KaUuaK/tnlyygH1WH5ynV5CRuVgcIivGPjsLqbPYGv1OUbg2bq6JcLBgXivmiN+CI6C0LjlZEgYxaEw0ynyCbBTGkRRWSez5LiMsGHfPQynrw7MA6ZCkzfdVHCPT4HSdTCTc6g4kLvf7q2HRVeED07e8RFaNWrxJyOCE05L5PhKHpTilkJjrFVV19hluM95L1xnNEGWRpkJxjrFqwf7l2Y425+pTYwa2wrLdtULkGyLA2Wf7EHqGY2f9LZ3g32In1/do34MCDO/STUBpwIR+PqvATmqbVM8/otq1wmJD5yGmb0U9dp1CPZ3jdKjzlVJ8x7FLVwXhIKZJIh7RdOm7zsfmWvRvQkx0MyFtA4eoekYig+AmJEA+fCCqBQgdB1FHKRoElDUCRw3nyhhYamt6rDdqPxVPVHi87iRdg+OcUEtPNFrUxZDaJHU=
    dist: ubuntu/focal
    local-dir: release
    package_glob: "*.deb"
    skip_cleanup: true
    cleanup: false
    on:
      branch: unstable
      condition: "$TRAVIS_OS_NAME = linux"
  - provider: packagecloud
    repository: unstable
    username: golift
    token:
      secure: PuwkeI7VlBBEpg9b6KsQy4lDEt10dQuDsZ1qVQBEllqUmpfRbn2EGk8b7nTiRTjfCVT9u1FX4I43MN/IBdgJPg9fI3YQcg5/lbEUrqDLtgo/MsP8pvMnXuhU+JuROdOHJP7/mVJrOOjDJBykTkHgtHhUcd7DcgNL5wytVdxU9szbeSns1MDK6ZPN2zxGYj9H7hmGGPWXSyNFwl87fL9629KEXUh7Ad85/G/EACdv1USz3ZHjOVt7KaUuaK/tnlyygH1WH5ynV5CRuVgcIivGPjsLqbPYGv1OUbg2bq6JcLBgXivmiN+CI6C0LjlZEgYxaEw0ynyCbBTGkRRWSez5LiMsGHfPQynrw7MA6ZCkzfdVHCPT4HSdTCTc6g4kLvf7q2HRVeED07e8RFaNWrxJyOCE05L5PhKHpTilkJjrFVV19hluM95L1xnNEGWRpkJxjrFqwf7l2Y425+pTYwa2wrLdtULkGyLA2Wf7EHqGY2f9LZ3g32In1/do34MCDO/STUBpwIR+PqvATmqbVM8/otq1wmJD5yGmb0U9dp1CPZ3jdKjzlVJ8x7FLVwXhIKZJIh7RdOm7zsfmWvRvQkx0MyFtA4eoekYig+AmJEA+fCCqBQgdB1FHKRoElDUCRw3nyhhYamt6rDdqPxVPVHi87iRdg+OcUEtPNFrUxZDaJHU=
    dist: el/6
    local-dir: release
    package_glob: "*.rpm"
    skip_cleanup: true
    cleanup: false
    on:
      branch: unstable
      condition: "$TRAVIS_OS_NAME = linux"
  - provider: script
    skip_cleanup: true
    cleanup: false
    script: bash init/unstable-deploy.sh
    on:
      branch: unstable
  # Stable packages (releases).
  - provider: packagecloud
    repository: pkgs
    username: golift
    token:
      secure: PuwkeI7VlBBEpg9b6KsQy4lDEt10dQuDsZ1qVQBEllqUmpfRbn2EGk8b7nTiRTjfCVT9u1FX4I43MN/IBdgJPg9fI3YQcg5/lbEUrqDLtgo/MsP8pvMnXuhU+JuROdOHJP7/mVJrOOjDJBykTkHgtHhUcd7DcgNL5wytVdxU9szbeSns1MDK6ZPN2zxGYj9H7hmGGPWXSyNFwl87fL9629KEXUh7Ad85/G/EACdv1USz3ZHjOVt7KaUuaK/tnlyygH1WH5ynV5CRuVgcIivGPjsLqbPYGv1OUbg2bq6JcLBgXivmiN+CI6C0LjlZEgYxaEw0ynyCbBTGkRRWSez5LiMsGHfPQynrw7MA6ZCkzfdVHCPT4HSdTCTc6g4kLvf7q2HRVeED07e8RFaNWrxJyOCE05L5PhKHpTilkJjrFVV19hluM95L1xnNEGWRpkJxjrFqwf7l2Y425+pTYwa2wrLdtULkGyLA2Wf7EHqGY2f9LZ3g32In1/do34MCDO/STUBpwIR+PqvATmqbVM8/otq1wmJD5yGmb0U9dp1CPZ3jdKjzlVJ8x7FLVwXhIKZJIh7RdOm7zsfmWvRvQkx0MyFtA4eoekYig+AmJEA+fCCqBQgdB1FHKRoElDUCRw3nyhhYamt6rDdqPxVPVHi87iRdg+OcUEtPNFrUxZDaJHU=
    dist: ubuntu/focal
    local-dir: release
    package_glob: "*.deb"
    skip_cleanup: true
    cleanup: false
    on:
      tags: true
      condition: "$TRAVIS_OS_NAME = linux"
  - provider: packagecloud
    repository: pkgs
    username: golift
    token:
      secure: PuwkeI7VlBBEpg9b6KsQy4lDEt10dQuDsZ1qVQBEllqUmpfRbn2EGk8b7nTiRTjfCVT9u1FX4I43MN/IBdgJPg9fI3YQcg5/lbEUrqDLtgo/MsP8pvMnXuhU+JuROdOHJP7/mVJrOOjDJBykTkHgtHhUcd7DcgNL5wytVdxU9szbeSns1MDK6ZPN2zxGYj9H7hmGGPWXSyNFwl87fL9629KEXUh7Ad85/G/EACdv1USz3ZHjOVt7KaUuaK/tnlyygH1WH5ynV5CRuVgcIivGPjsLqbPYGv1OUbg2bq6JcLBgXivmiN+CI6C0LjlZEgYxaEw0ynyCbBTGkRRWSez5LiMsGHfPQynrw7MA6ZCkzfdVHCPT4HSdTCTc6g4kLvf7q2HRVeED07e8RFaNWrxJyOCE05L5PhKHpTilkJjrFVV19hluM95L1xnNEGWRpkJxjrFqwf7l2Y425+pTYwa2wrLdtULkGyLA2Wf7EHqGY2f9LZ3g32In1/do34MCDO/STUBpwIR+PqvATmqbVM8/otq1wmJD5yGmb0U9dp1CPZ3jdKjzlVJ8x7FLVwXhIKZJIh7RdOm7zsfmWvRvQkx0MyFtA4eoekYig+AmJEA+fCCqBQgdB1FHKRoElDUCRw3nyhhYamt6rDdqPxVPVHi87iRdg+OcUEtPNFrUxZDaJHU=
    dist: el/6
    local-dir: release
    package_glob: "*.rpm"
    skip_cleanup: true
    cleanup: false
    on:
      tags: true
      condition: "$TRAVIS_OS_NAME = linux"
  # Upload built files to github too.
  - provider: releases
    api_key:
      secure: UhxGJA61J+mO084gxeChhk426ZsCumKS9FklwViUED0b58yzNqrJkHA0nV/wBHbM6Yl3QWIVXPA7z1FD/yx33xC+aUG1nBK//tke+t7vID+lN6mstD7l42byxAUBvds7W7QYmKMVMClBbH0yG8aTDs8JF3d0lbfnZ/Jbpk/riEkzbxhKCA7ePI6Dn959sOcg9CbgWmqNAPEacXdRDdntMYTuaF/6waYT4S0ulO5qT1rQqQJvGeBpw7/hQTZLlKBdpfYjun9Wqb+vJXGEby+XMeSqRmyjmokNNuFETl8ZnMJJ/KeI+HniddtATpEUrf5pTArZufc3n6uIPqhV+8+aZTCNFVBt9Semhz9SII8dAtHL9UAEKmvCFW4CWInBGhvMuoJImGEWz2sNH0vgblgKYo15K+Jq4P9xyC1IQKwBbatzjF5a1WzyGOMlqt3yIi+ehkSrK01IcS6zL0i8+wcS5bSkKTfVlvibT6BVCiv6+FZvuOyEuG1W5F7TN6tVyGI2CqS/XqUEpHTH9K2GXnvhAMfd+hrI249Gn6xYz8TD3YANbHZ1oy3nZA3quN2p6SPVR/X8fQlLEYfckLRtJE4Rngt9yyaDOmeYdMNIcNgRcQw2vVNA56/jaunHq8hxcj7oypfhw9Gz1PUPIzyDUlc1xR6jO2ksRyeUTepn6TEQw7w=
    overwrite: true
    skip_cleanup: true
    cleanup: false
    file_glob: true
    file: release/*
    on:
      tags: true
  # Upload homebrew formula file to a special repo.
  - provider: script
    script: bash init/homebrew/formula-deploy.sh
    on:
      tags: true
      condition: "$TRAVIS_OS_NAME = osx"
  # Upload aur PKGBUILD file to a special repo.
  - provider: script
    script: bash init/archlinux/aur-deploy.sh
    on:
      tags: true
      condition: "$TRAVIS_OS_NAME = linux"
